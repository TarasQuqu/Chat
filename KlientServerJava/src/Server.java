


import java.io.IOException;
import java.net.ServerSocket;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Taras
 */
public class Server extends javax.swing.JFrame implements Connection–°heck {
private final ArrayList<TCPConnection> ListConnections = new ArrayList<>();
//private static HashSet<String> names = new HashSet<String>();
//private static HashSet<PrintWriter> writers = new HashSet<PrintWriter>();

/**
     * The set of all the print writers for all the clients. This set is kept so
     * we can easily broadcast messages.
     */
TCPConnection connection;
private Thread thread;
int Port;
    /**
     * Creates new form ServerGrafika
     */
    public Server() {
        initComponents();
        AreaLogsChat.setEditable(false);
        lbPort.setVisible(false);
        lbOnline.setVisible(false);
        txtOnline.setVisible(false);
        getContentPane().requestFocusInWindow();
        
    }
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtPORT = new javax.swing.JTextField();
        btnCreateServer = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaLogsChat = new javax.swing.JTextArea();
        lbPort = new javax.swing.JLabel();
        btnOnline = new javax.swing.JButton();
        txtOnline = new javax.swing.JTextField();
        lbOnline = new javax.swing.JLabel();
        btnExit = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(510, 418));
        setName("Server"); // NOI18N

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(236, 240, 241));
        jLabel3.setText("Port:");

        txtPORT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPORT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPORTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPORTKeyTyped(evt);
            }
        });

        btnCreateServer.setBackground(new java.awt.Color(0, 255, 0));
        btnCreateServer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCreateServer.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateServer.setText("Create Server");
        btnCreateServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateServerActionPerformed(evt);
            }
        });

        AreaLogsChat.setColumns(20);
        AreaLogsChat.setRows(5);
        jScrollPane1.setViewportView(AreaLogsChat);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
        );

        lbPort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbPort.setForeground(new java.awt.Color(255, 0, 0));
        lbPort.setText("Port is empty");

        btnOnline.setBackground(new java.awt.Color(153, 0, 153));
        btnOnline.setText("Online");
        btnOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOnlineActionPerformed(evt);
            }
        });

        lbOnline.setForeground(new java.awt.Color(153, 0, 153));
        lbOnline.setText("Online");

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(lbPort)
                        .addGap(47, 47, 47)
                        .addComponent(btnOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtPORT, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnCreateServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(btnExit)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreateServer, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(txtPORT)
                            .addComponent(jLabel3))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOnline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOnline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbPort))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(248, 148, 6));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Server");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(404, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateServerActionPerformed
        // TODO add your handling code here:
        if(txtPORT.getText().trim().isEmpty())//sprawdzamy czy czy pole jest puste
        {
            JOptionPane.showMessageDialog(this,"Fill empty field!");
        }
        Thread thread = new Thread(()  ->StartServerInThread());//tworzymy watek
        thread.start();
    }//GEN-LAST:event_btnCreateServerActionPerformed

    private void txtPORTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPORTKeyTyped

        char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar)) || txtPORT.getText().length() >= 5)//sprawdzamy czy jest cyfra i dlugosc pola <= 5
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtPORTKeyTyped

    private void txtPORTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPORTKeyReleased
        // TODO add your handling code here:
        lbPort.setText("");//wyczy≈õcimy label
    }//GEN-LAST:event_txtPORTKeyReleased

    private void btnOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOnlineActionPerformed

        txtOnline.setVisible(true);
        lbOnline.setVisible(true);
        txtOnline.invalidate();
        txtOnline.setText("" + ListConnections.size());
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOnlineActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
      System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed

    private void StartServerInThread()
    {   
        if(txtPORT.getText().trim().isEmpty())//sprawdzamy czy pole jest puste
        {
        getContentPane().requestFocusInWindow();//focus na panel
        lbPort.setVisible(true);//label jest widoczna
        }
        else{
        AreaLogsChat.append("Trying to start server.....");
        String text = txtPORT.getText();
        Port = Integer.parseInt(text);
        if(Port>65535)
        {
        JOptionPane.showMessageDialog(this,"Maximum TCP Port is 65535");
        }
        else
        {
        try (ServerSocket serverSocket = new ServerSocket(Port)) {//mo≈ºe s≈Çuchaƒá niekt√≥rych port√≥w i akceptowaƒá
            //po≈ÇƒÖczenia przychodzƒÖce
            AreaLogsChat.append("Server is started \n");
        while(true)
        {     
            try{
                TCPConnection tcpConnection = new TCPConnection(this,serverSocket.accept());
                //dla ka≈ºdego nowego
                //po≈ÇƒÖczenia tworzymy nowe
                //TCP polaczenia 
            }catch(IOException e)//jezeli cos pry przylƒÖczeniu klienta
            {
                AreaLogsChat.append("Exception: " + e);
            }
        }
        }catch(IOException e) {
            throw new RuntimeException(e);//break
        }
        }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Server().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaLogsChat;
    private javax.swing.JButton btnCreateServer;
    private javax.swing.JToggleButton btnExit;
    private javax.swing.JButton btnOnline;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbOnline;
    private javax.swing.JLabel lbPort;
    private javax.swing.JTextField txtOnline;
    private javax.swing.JTextField txtPORT;
    // End of variables declaration//GEN-END:variables

    //synchronized aby w tym samym czasie z roznych watkow nie mo≈ºna by≈Ço siƒô do nich dostaƒá
    private void SendToAllConnections(String value)
    {
        if(value==null) return;  
        AreaLogsChat.append("\r\n" + value);
        for(int i=0;i<ListConnections.size();i++)//wysylamy wszystkim 
        {
            ListConnections.get(i).sendMsg(value);
        }
    }

    @Override
    public void IfConnectionReady(TCPConnection tcpConnection) {
    ListConnections.add(tcpConnection);//dodajem do listy
    txtOnline.setText("" + ListConnections.size());
    SendToAllConnections("Connected: " + tcpConnection);   }

    @Override
    public void GetMsg(TCPConnection tcpConnection, String value) {
    SendToAllConnections(value);
    }

    @Override
    public void IfDisconnect(TCPConnection tcpConnection) {
    ListConnections.remove(tcpConnection);//usuwamy z listy
    txtOnline.setText("" + ListConnections.size());
    SendToAllConnections("Disconnected " + tcpConnection);    }

    @Override
    public void IfException(TCPConnection tcpConnection, Exception e) {
    ListConnections.remove(tcpConnection);//usuwamy z listy
    txtOnline.setText("" + ListConnections.size());
    AreaLogsChat.append("\n TCPConnection exception" + e);    }
}

