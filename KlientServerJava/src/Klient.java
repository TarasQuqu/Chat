import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.SimpleDateFormat;
import static java.time.Clock.system;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Taras
 */
public class Klient extends javax.swing.JFrame implements ActionListener,Connection–°heck {

    /**
     * Creates new form Klient
     */
   
   private TCPConnection connection;
   private String IP_ADDR; 
   private int PORT; 
   
   
   
    public Klient() {
        initComponents();
        getContentPane().requestFocusInWindow();
        fieldInput.addActionListener(this);
        lbIP.setVisible(false);
        lbName.setVisible(false);
        lbPort.setVisible(false);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        fieldInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        btnSendMsg = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        fieldNickName = new javax.swing.JTextField();
        IP = new javax.swing.JTextField();
        Port = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lbIP = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbPort = new javax.swing.JLabel();
        btnDisconnect = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 500));
        setName("Klient"); // NOI18N

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        log.setColumns(20);
        log.setRows(5);
        jScrollPane1.setViewportView(log);

        btnSendMsg.setBackground(new java.awt.Color(204, 204, 255));
        btnSendMsg.setText("Send");
        btnSendMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMsgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(fieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSendMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldInput, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(btnSendMsg)))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("IP");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Port");

        btnConnect.setBackground(new java.awt.Color(0, 255, 0));
        btnConnect.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConnect.setForeground(new java.awt.Color(255, 255, 255));
        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        fieldNickName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldNickNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldNickNameKeyTyped(evt);
            }
        });

        IP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPActionPerformed(evt);
            }
        });
        IP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IPKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IPKeyTyped(evt);
            }
        });

        Port.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PortKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PortKeyTyped(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));

        lbIP.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbIP.setForeground(new java.awt.Color(255, 0, 0));
        lbIP.setText("IP is empty");

        lbName.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbName.setForeground(new java.awt.Color(255, 0, 0));
        lbName.setText("Name is empty");

        lbPort.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbPort.setForeground(new java.awt.Color(255, 0, 0));
        lbPort.setText("Port is empty");

        btnDisconnect.setBackground(new java.awt.Color(255, 0, 0));
        btnDisconnect.setForeground(new java.awt.Color(255, 255, 255));
        btnDisconnect.setText("Exit");
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 0));
        jButton1.setText("New Klient");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fieldNickName, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbIP, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(btnDisconnect, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(fieldNickName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnConnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbIP)
                            .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPort)
                            .addComponent(btnDisconnect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Klient");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IPKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if((Character.isLetter(c))) //liczby i znaki ,./
        {
            evt.consume();
        }
    }//GEN-LAST:event_IPKeyTyped

    private void PortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PortKeyTyped
        // TODO add your handling code here:
        char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar)) || Port.getText().length() >= 5){ //tylko liczby
            evt.consume();
    }//GEN-LAST:event_PortKeyTyped
  
    }
    
    private void fieldNickNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldNickNameKeyReleased
        // TODO add your handling code here:
        lbName.setText("");//oczysczamy 
    }//GEN-LAST:event_fieldNickNameKeyReleased

    private void IPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IPKeyReleased
        // TODO add your handling code here:
        lbIP.setText("");//oczysczamy label

        
    }//GEN-LAST:event_IPKeyReleased

    private void PortKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PortKeyReleased
        lbPort.setText("");//oczysczamy label
        // TODO add your handling code here:
    }//GEN-LAST:event_PortKeyReleased

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        if(fieldNickName.getText().trim().isEmpty() && IP.getText().trim().isEmpty() && Port.getText().trim().isEmpty()){
            //sprawdzamy NickName,Port,IP
            lbPort.setVisible(Port.getText().trim().isEmpty());
            lbName.setVisible(fieldNickName.getText().trim().isEmpty());
            lbIP.setVisible(IP.getText().trim().isEmpty());
        }
        else if
            (fieldNickName.getText().equals("") || IP.getText().trim().isEmpty() || Port.getText().trim().isEmpty()||((fieldNickName.getText().equals("") && IP.getText().trim().isEmpty() && Port.getText().trim().isEmpty() )) )
        {
            JOptionPane.showMessageDialog(this,"Fill all empty fields");
        }
        else{
            fieldNickName.setEnabled(false);
            lbIP.setVisible(false);
            lbName.setVisible(false);
            lbPort.setVisible(false);
            IP_ADDR = IP.getText();
            String text = Port.getText();
            PORT = Integer.parseInt(text);
            if(PORT>65535)
        {
        JOptionPane.showMessageDialog(this,"Maximum TCP Port is 65535");
        }   
            try {
                connection = new TCPConnection(this,IP_ADDR, PORT);//przekazuje IP,PORT,EVENT LISTENER
                btnConnect.setEnabled(false);
            } catch (IOException e) {
                printMsg("Connection exception:" + e);
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        // TODO add your handling code here:
    System.exit(0); 

    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       // TODO add your handling code here:
       new Klient().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fieldNickNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldNickNameKeyTyped
        // TODO add your handling code here
        char vchar = evt.getKeyChar();
        if(!(Character.isLetter(vchar))||(fieldNickName.getText().length() >= 8))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_fieldNickNameKeyTyped
Date dateNow = new Date();
SimpleDateFormat formatForDateNow = new SimpleDateFormat("hh:mm a");//zmienniamy format
private void SendMsg()
{
 String msg = fieldInput.getText();
 if(msg.equals("quit")) System.exit(0); 
 if(msg.equals("")) return;
 fieldInput.setText("");
 if(msg.length() > 300)
 {
 JOptionPane.showMessageDialog(this,"Maximum length of text is 50 chars");
 }
 else{
 connection.sendMsg(formatForDateNow.format(dateNow) + " " +  fieldNickName.getText() + ":" + msg);   
}
}
    private void btnSendMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMsgActionPerformed
        // TODO add your handling code here:
    SendMsg(); 
    }//GEN-LAST:event_btnSendMsgActionPerformed

    private void IPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Klient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Klient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Klient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Klient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Klient().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IP;
    private javax.swing.JTextField Port;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnSendMsg;
    private javax.swing.JTextField fieldInput;
    private javax.swing.JTextField fieldNickName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbIP;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPort;
    private javax.swing.JTextArea log;
    // End of variables declaration//GEN-END:variables

    @Override 
public void actionPerformed(ActionEvent ae) { //po nacisnieciu buttona przekazac string
SendMsg();
}
private synchronized void printMsg(String msg) 
{ 
SwingUtilities.invokeLater(() -> { //bo metod bedzie wyzywany z roznych watkow
    //i zeby ponizej rzeczy byli spelnioni w formie potrzebujemy ten metod
log.append(msg + "\n");
log.setEditable(false);
log.setLineWrap(true);//zawijaj linie, kt√≥re sƒÖ zbyt d≈Çugie dla obszaru wy≈õwietlania.                        
log.setCaretPosition(log.getDocument().getLength()); 
}); 
}
    @Override
    public void IfConnectionReady(TCPConnection tcpConnection) {
    printMsg("Connection is ready");   
    }

    @Override
    public void GetMsg(TCPConnection tcpConnection, String value) {
    printMsg(value);
    }

    @Override
    public void IfDisconnect(TCPConnection tcpConnection) {
    printMsg("Connection is close \n");    
    }

    @Override
    public void IfException(TCPConnection tcpConnection, Exception e) {
    printMsg("Exception" + e);    }
}
